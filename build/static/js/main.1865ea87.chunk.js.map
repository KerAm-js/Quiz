{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.scss","containers/QuizList/QuizList.module.scss","components/UI/Input/Input.module.scss","containers/QuizCreator/QuizCreator.module.scss","containers/Auth/Auth.module.scss","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/UI/Select/Select.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","redux/actions/actionsTypes.js","redux/actions/quiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","redux/actions/create.js","redux/actions/auth.js","containers/Auth/Auth.js","components/Logout/Logout.js","App.js","reportWebVitals.js","redux/reducers/quiz.js","redux/reducers/create.js","redux/reducers/auth.js","redux/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","closeMenuHandler","links","to","label","exact","this","isAuthenticate","Fragment","map","link","index","activeClassName","React","Component","connect","state","auth","token","Layout","menu","toggleHandler","setState","style","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","rightAnswerCount","Object","keys","results","reduce","total","key","quiz","quizItem","iconClass","length","retryHandler","Loader","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_BY_ID_SUCCESS","RETRY_HANDLER","SET_ANSWER_STATE_AND_RESULTS","SET_IS_FINISHED","NEXT_QUESTION","TO_QUIZ_BEGINING","ADD_QUESTION","AUTH_SUCCESS","AUTH_LOGOUT","CHANGE_ANSWERS_COUNT","answerClick","answerId","dispatch","getState","answerState","activeQuestion","rightAnswerId","setAnswerStateAndResultsAC","timeOut","window","setTimeout","value","nextQuestion","clearTimeout","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizByIdSuccess","fetchQuizesError","error","Quiz","fetchQuizById","match","params","loading","isFinished","answerClickHandler","quizId","a","get","response","data","console","log","QuizList","name","fetchQuizes","renderQuizList","isAuth","forEach","isInvalid","valid","shouldValidate","touched","Input","inputType","htmlFor","Math","random","onChange","errorMessage","createControl","config","validation","validate","isValid","required","trim","formValidate","formControlls","isFormValid","control","hasOwnProperty","Auxiliary","Select","options","option","createFormControls","count","number","i","QuizCreator","answersCount","onSubmitHandler","event","preventDefault","createQuestionHandler","addQuestion","createQuizHandler","addQuiz","changeInputHandler","controllerName","target","changeRightAnswer","Number","changeAnswersCount","onSubmit","renderInputs","rightAnswerSelect","item","post","authSuccess","autoLogout","time","logout","validateEmail","email","test","String","toLowerCase","Auth","password","minLength","loginHenadler","registerHenadler","submitHandler","validateControl","onChangeHandler","controlName","isLogin","url","apiKey","authData","returnSecureToken","localStorage","setItem","idToken","localId","Date","getTime","expiresIn","alert","Logout","App","autoLogin","routes","path","component","getItem","expirationDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","quizReducer","action","createReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1865ea87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__k9oZ1\",\"close\":\"Drawer_close__157sK\",\"active\":\"Drawer_active__2oACK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__21_pH\",\"open\":\"MenuToggle_open__3GTM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2THIz\",\"QuizWrapper\":\"Quiz_QuizWrapper__2wTef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__Dpsgu\",\"Question\":\"ActiveQuiz_Question__18iOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3PJVi\",\"success\":\"AnswerItem_success__30eEE\",\"error\":\"AnswerItem_error___hrWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__D-CkC\",\"success\":\"FinishedQuiz_success__jBBc5\",\"error\":\"FinishedQuiz_error__KSdom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"error\":\"Button_error__2nDvg\",\"success\":\"Button_success__cnhtV\",\"primary\":\"Button_primary__28VL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3cxM3\",\"lds-roller\":\"Loader_lds-roller__3wpSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EsJjC\",\"info\":\"QuizList_info__3LJU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2CeNk\",\"info\":\"QuizCreator_info__dZ-uy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__7JmWy\",\"AuthForm\":\"Auth_AuthForm__2fbR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__EwYQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__26ooE\"};","import React from 'react';\nimport classes from './MenuToggle.module.scss';\n\nconst MenuToggle = props => {\n\n  let cls = [\n    classes['MenuToggle'],\n    'fa',\n  ];\n\n  if (props.isOpen) {\n    cls.push('fa-times');\n    cls.push(classes['open']);\n  } else {\n    cls.push('fa-bars');\n  };\n\n  return (\n    <i\n      className={cls.join(' ')}\n      onClick={props.onToggle}\n    />\n  );\n};\n\nexport default MenuToggle;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst Backdrop = props => {\n  return (\n    <div \n      className={ classes['Backdrop'] } \n      onClick={ props.onClick }\n    />\n  )\n}\n\nexport default Backdrop;\n","import React from 'react';\nimport classes from './Drawer.module.scss';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass Drawer extends React.Component {\n  clickHandler = () => {\n    this.props.closeMenuHandler()\n  };\n\n  render() {\n    let links = [\n      { to: '/', label: 'Список', exact: true },\n      { to: '/auth', label: 'Авторизация', exact: true },\n    ];\n\n    if (this.props.isAuthenticate) {\n      links = [\n        { to: '/quiz-creator', label: 'Создать тест', exact: true },\n        { to: '/', label: 'Список', exact: true },\n        { to: '/logout', label: 'Выйти', exact: true },\n      ];\n    };\n\n    let cls = [\n      classes['Drawer'],\n    ];\n\n    if (!this.props.isOpen) {\n      cls.push(classes['close']);\n    };\n\n    return (\n      <React.Fragment>\n        <nav className={cls.join(' ')}>\n          <ul>\n            {\n              links.map((link, index) => {\n                return (\n                  <li key={index} >\n                    <NavLink\n                      to={link.to}\n                      exact={link.exact}\n                      onClick={this.clickHandler}\n                      activeClassName={classes['active']}\n                    >\n                      {link.label}\n                    </NavLink>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </nav>\n        {this.props.isOpen\n          ? <Backdrop onClick={this.props.closeMenuHandler} />\n          : null\n        }\n      </React.Fragment>\n    );\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticate: !!state.auth.token,\n  };\n};\n\nexport default connect(mapStateToProps)(Drawer);","import React from 'react';\nimport style from './Layout.module.css';\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\n\n\nclass Layout extends React.Component {\n\n  state = {\n    menu: false,\n  };\n\n  toggleHandler = () => {\n    this.setState({\n      menu: !this.state.menu,\n    });\n  };\n\n  closeMenuHandler = () => {\n    this.setState({\n      menu: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className={style['Layout']}>\n        <Drawer\n          isOpen={this.state.menu}\n          closeMenuHandler={this.closeMenuHandler}\n        />\n        <MenuToggle\n          onToggle={this.toggleHandler}\n          isOpen={this.state.menu}\n        />\n        <main>\n          {this.props.children}\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default Layout;","import React from 'react';\nimport style from './AnswerItem.module.css'\n\nconst AnswerItem = props => {\n  let classes = [style.AnswerItem];\n\n  if (props.state !== null) {\n    classes.push(style[props.state]);\n  };\n\n  return (\n    <li\n      className={classes.join(' ')}\n      onClick={() => { props.onAnswerClick(props.answer.id) }}\n    >\n      {props.answer.text}\n    </li>\n  );\n};\n\nexport default AnswerItem;","import React from 'react';\nimport style from './AnswersList.module.css';\nimport AnswerItem from './AnswerItem/AnswerItem';\n\nconst AnswersList = props => {\n  return (\n    <ul className={style['AnswersList']}>\n      {props.answers.map((answer, index) => {\n        return (\n          <AnswerItem\n            key={index}\n            answer={answer}\n            onAnswerClick={props.onAnswerClick}\n            state={props.state ? props.state[answer.id] : null}\n          />\n        )\n      })\n      }\n    </ul>\n  );\n};\n\nexport default AnswersList;","import React from 'react';\nimport style from './ActiveQuiz.module.css'\nimport AnswersList from './AnswersList/AnswersList';\n\nconst ActiveQuiz = props => {\n  return (\n    <div className={style['ActiveQuiz']}>\n      <p className={style['Question']}>\n        <span>\n          <strong>{props.answerNumber}.</strong>&nbsp;\n          {props.question}\n        </span>\n        <small>{props.answerNumber} из {props.quizLength}</small>\n      </p>\n      <AnswersList\n        answers={props.answers}\n        onAnswerClick={props.onAnswerClick}\n        state={props.state}\n      />\n    </div>\n  );\n};\n\nexport default ActiveQuiz;","import React from 'react';\nimport style from './Button.module.css';\n\nconst Button = props => {\n  let cls = [\n    style['Button'],\n    style[props.type],\n  ];\n\n  return (\n    <button \n      onClick={ props.onClick }\n      className={ cls.join(' ') }\n      disabled={ props.disabled }\n    >\n      { props.children }\n    </button>\n  );\n};\n\nexport default Button;","import React from 'react';\nimport style from './FinishedQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport { Link } from 'react-router-dom';\n\nclass FinishedQuiz extends React.Component {\n  render() {\n    let rightAnswerCount = Object.keys(this.props.results).reduce((total, key) => {\n      if (this.props.results[key] === 'success') {\n        total++;\n      };\n      return total;\n    }, 0);\n\n    return (\n      <div className={style['FinishedQuiz']}>\n        <h1>Finished</h1>\n        <ul>\n          {this.props.quiz.map((quizItem, index) => {\n            let iconClass = [\n              'fa',\n              this.props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n              style[this.props.results[quizItem.id]],\n            ];\n            return (\n              <li key={index}>\n                <strong>{index + 1}</strong>.&nbsp;\n                {quizItem.question}\n                <i className={iconClass.join(' ')} />\n              </li>\n            )\n          })}\n        </ul>\n        <p>Правильно {rightAnswerCount} из {this.props.quiz.length}</p>\n        <Button onClick={this.props.retryHandler} type={'primary'}>Повторить</Button>\n        <Link to=\"/\" >\n          <Button type={'success'}>Перейти к списку тестов</Button>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default FinishedQuiz;","import React from \"react\";\nimport classes from './Loader.module.scss';\n\nconst Loader = props => {\n    return (\n        <div className={classes['Loader']} >\n            <div className={classes[\"lds-roller\"]}>\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: 'https://react-quiz-54cb1-default-rtdb.europe-west1.firebasedatabase.app/',\n});","export const FETCH_QUIZES_START = 'FETCH-QUIZES-START';\nexport const FETCH_QUIZES_SUCCESS = 'FETCH-QUIZES-SUCCESS';\nexport const FETCH_QUIZES_ERROR = 'FETCH-QUIZES-ERROR';\nexport const FETCH_QUIZ_BY_ID_SUCCESS = 'FETCH-QUIZ-BY-ID-SUCCESS';\n\nexport const ANSWER_CLICK = 'ANSWER-CLICK';\nexport const RETRY_HANDLER = 'RETRY-HANDLER';\nexport const SET_ANSWER_STATE_AND_RESULTS = 'SET-ANSWER-STATE-AND-RESULTS';\nexport const SET_IS_FINISHED = 'SET-IS-FINISHED';\nexport const NEXT_QUESTION = 'NEXT-QUESTION';\nexport const TO_QUIZ_BEGINING = 'TO-QUIZ-BEGINNING';\n\nexport const ADD_QUESTION = 'ADD-QUESTION';\n\nexport const AUTH_SUCCESS = 'AUTH-SUCCESS';\nexport const AUTH_LOGOUT = 'AUTH-LOGOUT';\n\nexport const CHANGE_ANSWERS_COUNT = 'CHANGE-ANSWERS-COUNT';\n\n\n\n\n","import axios from '../../axios/axios-quiz';\nimport {\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZ_BY_ID_SUCCESS,\n    RETRY_HANDLER,\n    SET_ANSWER_STATE_AND_RESULTS,\n    SET_IS_FINISHED,\n    NEXT_QUESTION,\n    TO_QUIZ_BEGINING,\n} from './actionsTypes';\n\nexport function fetchQuizes() {\n    return async dispatch => {\n        dispatch(fetchQuizesStart());\n        try {\n            const response = await axios.get('/quizes.json');\n\n            let quizes = [];\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Тест №${index + 1}`,\n                });\n            });\n            dispatch(fetchQuizesSuccess(quizes));\n        } catch (e) {\n            dispatch(fetchQuizesError(e));\n            console.log(e);\n        };\n    };\n};\n\nexport function fetchQuizById(quizId) {\n    return async dispatch => {\n        dispatch(fetchQuizesStart());\n        try {\n            const response = await axios.get(`/quizes/${quizId}.json`);\n            const quiz = response.data;\n            dispatch(fetchQuizByIdSuccess(quiz));\n        } catch (e) {\n            dispatch(fetchQuizesError(e));\n            console.log(e);\n        };\n    };\n};\n\nexport function answerClick(answerId) {\n    return (dispatch, getState) => {\n        const state = getState().quiz;\n        if (state.answerState) {\n            const key = Object.keys(state.answerState)[0];\n            if (state.answerState[key] === 'success') {\n                return\n            };\n        };\n\n        const question = state.quiz[state.activeQuestion];\n        const results = state.results;\n        if (question.rightAnswerId === answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success';\n            };\n\n            dispatch(setAnswerStateAndResultsAC(answerId, 'success', results));\n\n            const timeOut = window.setTimeout(() => {\n                if (state.activeQuestion + 1 === state.quiz.length) {\n                    dispatch(setIsFinishedAC(true));\n                } else {\n                    dispatch(nextQuestion(state.activeQuestion + 1));\n                };\n                window.clearTimeout(timeOut);\n            }, 1000)\n\n        } else {\n            results[question.id] = 'error';\n            dispatch(setAnswerStateAndResultsAC(answerId, 'error', results));\n        };\n    };\n};\n\nexport function fetchQuizesStart() {\n    return {\n        type: FETCH_QUIZES_START,\n    };\n};\n\nexport function fetchQuizesSuccess(quizes) {\n    return {\n        type: FETCH_QUIZES_SUCCESS,\n        quizes,\n    };\n};\n\nexport function fetchQuizByIdSuccess(quiz) {\n    return {\n        type: FETCH_QUIZ_BY_ID_SUCCESS,\n        quiz,\n    };\n};\n\nexport function fetchQuizesError(error) {\n    return {\n        type: FETCH_QUIZES_ERROR,\n        error,\n    };\n};\n\nexport function retryHandlerAC() {\n    return {\n        type: RETRY_HANDLER,\n    };\n};\n\nexport function setAnswerStateAndResultsAC(answerId, value, results) {\n    return {\n        type: SET_ANSWER_STATE_AND_RESULTS,\n        answerId,\n        value,\n        results,\n    };\n};\n\nexport function setIsFinishedAC(value) {\n    return {\n        type: SET_IS_FINISHED,\n        value,\n    };\n};\n\nexport function nextQuestion(value) {\n    return {\n        type: NEXT_QUESTION,\n        value,\n    };\n};\n\nexport function toQuizBeginning() {\n    return {\n        type: TO_QUIZ_BEGINING,\n    };\n};\n\n","import React from 'react';\nimport style from './Quiz.module.scss'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport Loader from '../../components/UI/Loader/Loader';\nimport { connect } from 'react-redux';\nimport {\n  fetchQuizById,\n  answerClick,\n  retryHandlerAC,\n} from '../../redux/actions/quiz';\n\n\nclass Quiz extends React.Component {\n\n  isQuizFinished() {\n    return this.props.activeQuestion + 1 === this.props.quiz.length;\n  };\n\n  componentDidMount() {\n    this.props.fetchQuizById(this.props.match.params.id);\n  };\n\n  componentWillUnmount() {\n    this.props.retryHandler();\n  };\n\n  render() {\n    return (\n      <div className={style['Quiz']}>\n        <div className={style['QuizWrapper']}>\n          {\n            this.props.loading || this.props.quiz.length === 0\n              ? <Loader />\n              : this.props.isFinished\n                ? <FinishedQuiz\n                  results={this.props.results}\n                  quiz={this.props.quiz}\n                  retryHandler={this.props.retryHandler}\n                />\n                : <div>\n                  <h1>Ответьте на все вопросы</h1>\n                  <ActiveQuiz\n                    answers={this.props.quiz[this.props.activeQuestion].answers}\n                    question={this.props.quiz[this.props.activeQuestion].question}\n                    onAnswerClick={this.props.answerClickHandler}\n                    quizLength={this.props.quiz.length}\n                    answerNumber={this.props.activeQuestion + 1}\n                    state={this.props.answerState}\n                  />\n                </div>\n          }\n        </div>\n      </div>\n    );\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    isFinished: state.quiz.isFinished,\n    results: state.quiz.results,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\n    retryHandler: () => dispatch(retryHandlerAC()),\n    answerClickHandler: answerId => dispatch(answerClick(answerId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './QuizList.module.scss';\nimport Loader from '../../components/UI/Loader/Loader';\nimport { connect } from 'react-redux';\nimport { fetchQuizes } from '../../redux/actions/quiz';\n\nclass QuizList extends React.Component {\n\n    renderQuizList() {\n        return this.props.quizes.map(quiz => {\n            return (\n                <li key={quiz.id}>\n                    <NavLink\n                        to={`/quiz/` + quiz.id}\n                    >\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            );\n        });\n    };\n\n    componentDidMount() {\n        this.props.fetchQuizes();\n    };\n\n    render() {\n        return (\n            <div className={classes['QuizList']}>\n                <div>\n                    <h1>Список тестов</h1>\n                    {\n                        this.props.loading && this.props.quizes.length === 0\n                            ? <Loader />\n                            : <ul>\n                                {this.renderQuizList()}\n                            </ul>\n                    }\n                </div>\n                {\n                    this.props.isAuth\n                        ?\n                        null\n                        : <div className={classes['info']}>\n                            <p>Авторизируйтесь, чтобы создать свой тест</p>\n                        </div>\n                }\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        quizes: state.quiz.quizes,\n        loading: state.quiz.loading,\n        isAuth: !!state.auth.token\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchQuizes: () => dispatch(fetchQuizes()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);","import React from \"react\";\nimport classes from './Input.module.scss';\n\nfunction isInvalid({ valid, shouldValidate, touched }) {\n    return !valid && shouldValidate && touched\n}\n\nconst Input = props => {\n    const cls = [classes['Input']];\n    const inputType = props.type || 'text';\n    const htmlFor = `${inputType}-${Math.random()}`;\n\n    if (isInvalid(props)) {\n        cls.push(classes['invalid']);\n    };\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor} >{props.label}</label>\n            <input\n                type={inputType}\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            />\n            {\n                isInvalid(props) ? <span>{props.errorMessage}</span> : null\n            }\n\n        </div>\n    );\n};\n\nexport default Input;","export function createControl(config, validation) {\n    const control = {\n        ...config,\n        validation: { ...validation },\n        valid: !validation,\n        shouldValidate: !!validation,\n        touched: false,\n        value: '',\n    };\n    return control;\n};\n\nexport function validate(value, validation = null) {\n    if (!validation) {\n        return true;\n    };\n\n    let isValid = true;\n    if (validation.required) {\n        isValid = value.trim() !== '' && isValid;\n    };\n\n    return isValid;\n};\n\nexport function formValidate(formControlls) {\n    let isFormValid = true;\n\n    for (let control in formControlls) {\n        if (formControlls.hasOwnProperty(control)) {\n            isFormValid = formControlls[control].valid && isFormValid;\n        };\n    };\n\n    return isFormValid;\n};\n","const Auxiliary = props => props.children;\n\nexport default Auxiliary;","import React from 'react';\nimport classes from './Select.module.scss'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`;\n\n    return (\n        <div className={classes['Select']}>\n            <label htmlFor={htmlFor} >{props.label}</label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {\n                    props.options.map((option, index) => {\n                        return (\n                            <option\n                                key={option.value + index}\n                                value={option.value}\n                            >\n                                {option.text}\n                            </option>\n                        );\n                    })\n                }\n            </select>\n        </div>\n    );\n};\n\nexport default Select;","import React from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport classes from './QuizCreator.module.scss';\nimport { createControl, validate, formValidate } from '../../form/formFramework';\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\nimport Select from '../../components/UI/Select/Select';\nimport { connect } from 'react-redux';\nimport { addQuestion, addQuiz } from '../../redux/actions/create';\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Invalid answer text',\n        id: number,\n    }, { required: true })\n};\n\nfunction createFormControls(count) {\n    let formControlls = {\n        question: createControl({\n            label: 'Введите текст вопроса',\n            errorMessage: 'invalid question text',\n        }, { required: true }),\n    };\n    for (let i = 1; i <= count; i++) {\n        formControlls[`option${i}`] = createOptionControl(i);\n    };\n    return formControlls;\n};\n\nclass QuizCreator extends React.Component {\n\n    state = {\n        isFormValid: false,\n        rightAnswerId: 1,\n        answersCount: 4,\n        formControlls: createFormControls(this.answersCount || 4),\n    };\n    onSubmitHandler = event => {\n        event.preventDefault();\n    };\n\n    createQuestionHandler = event => {\n        event.preventDefault();\n        let quizItem = {\n            id: this.props.quiz.length + 1,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n            ],\n        };\n\n        Object.keys(this.state.formControlls).forEach(key => {\n            if (key === 'question') {\n                quizItem[key] = this.state.formControlls[key].value\n            } else {\n                quizItem.answers.push({\n                    text: this.state.formControlls[key].value,\n                    id: this.state.formControlls[key].id,\n                });\n            };\n        });\n\n        this.props.addQuestion(quizItem);\n\n        this.setState({\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControlls: createFormControls(this.state.answersCount),\n        });\n    };\n\n    createQuizHandler = event => {\n        event.preventDefault();\n        this.props.addQuiz();\n        this.setState({\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControlls: createFormControls(this.state.answersCount),\n        });\n    };\n\n    changeInputHandler = (event, controllerName) => {\n        const formControlls = { ...this.state.formControlls };\n        const control = { ...formControlls[controllerName] }\n        control.value = event.target.value;\n        control.touched = true;\n        control.valid = validate(control.value, control.validation);\n        formControlls[controllerName] = control;\n\n        this.setState({\n            formControlls,\n            isFormValid: formValidate(formControlls),\n        });\n    };\n\n    changeRightAnswer = (event) => {\n        this.setState({\n            rightAnswerId: Number(event.target.value),\n        });\n    };\n\n    changeAnswersCount = event => {\n        this.setState({\n            answersCount: event.target.value,\n            formControlls: createFormControls(event.target.value),\n        });\n    };\n\n    renderInputs() {\n        return Object.keys(this.state.formControlls).map((controllerName, index) => {\n            const control = this.state.formControlls[controllerName];\n            return (\n                <Auxiliary key={index} >\n                    <Input\n                        value={control.value}\n                        label={control.label}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        valid={control.valid}\n                        onChange={event => this.changeInputHandler(event, controllerName)}\n                    />\n                    {index === 0 ? <hr /> : null}\n                </Auxiliary>\n            );\n        });\n    };\n\n    render() {\n        const answersCountSelect = () => {\n            return (\n                <Select\n                    label=\"Выберите количество ответов\"\n                    value={this.state.answersCount}\n                    onChange={event => this.changeAnswersCount(event)}\n                    options={[\n                        { text: 2, value: 2 },\n                        { text: 3, value: 3 },\n                        { text: 4, value: 4 },\n                    ]}\n                />\n            );\n        };\n        const rightAnswerSelect = () => {\n            let options = [];\n            for (let i = 1; i <= this.state.answersCount; i++) {\n                options.push({\n                    text: i,\n                    value: i,\n                });\n            };\n            return (\n                <Select\n                    label=\"Выберите правильный ответ\"\n                    value={this.state.rightAnswerId}\n                    onChange={event => this.changeRightAnswer(event)}\n                    options={options}\n                />\n            )\n        }\n        return (\n\n            <div className={classes['QuizCreator']} >\n\n                <div>\n                    <h1>QuizCreator</h1>\n\n                    <form onSubmit={event => this.onSubmitHandler(event)}>\n\n                        {this.renderInputs()}\n                        {answersCountSelect()}\n                        {rightAnswerSelect()}\n\n                        <Button\n                            type=\"primary\"\n                            onClick={event => this.createQuestionHandler(event)}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Добавить вопрос\n                        </Button>\n                        <Button\n                            type=\"success\"\n                            onClick={event => this.createQuizHandler(event)}\n                            disabled={this.props.quiz.length === 0}\n                        >\n                            Создать тест\n                        </Button>\n                    </form>\n                    {\n                        this.state.isFormValid\n                            ?\n                            <div className={classes['info']}>\n                                <p>Нажмите \"добавить вопрос\", прежде чем создать тест!</p>\n                            </div>\n                            :\n                            null\n                    }\n\n                </div>\n\n            </div>\n        );\n    };\n};\n\nfunction mapStateToProps(state) {\n    return {\n        quiz: state.create.quiz,\n    };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addQuestion: item => dispatch(addQuestion(item)),\n        addQuiz: () => dispatch(addQuiz()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);","import { ADD_QUESTION, CHANGE_ANSWERS_COUNT, } from './actionsTypes';\nimport axios from '../../axios/axios-quiz';\n\nexport function addQuestion(item) {\n    return {\n        type: ADD_QUESTION,\n        item,\n    };\n};\n\nexport function addQuiz() {\n    return async (dispatch, getState) => {\n        await axios.post('/quizes.json', getState().create.quiz);\n    };\n};\n\nexport function changeAnswersCount(count) {\n    return {\n        type: CHANGE_ANSWERS_COUNT,\n        count,\n    };\n};\n","import axios from 'axios';\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from './actionsTypes';\n\nexport default function auth(email, password, isLogin) {\n    return async dispatch => {\n\n        const apiKey = 'AIzaSyA6nJFe_boANAFY1gFjZTqZeBewLqeaVaA';\n\n        let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`;\n        if (isLogin) {\n            url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`;\n        };\n\n        try {\n            const authData = {\n                email,\n                password,\n                returnSecureToken: true,\n            };\n            const response = await axios.post(url, authData);\n            const data = response.data\n            console.log(data);\n\n            localStorage.setItem('token', data.idToken);\n            localStorage.setItem('localId', data.localId);\n            localStorage.setItem('expirationDate', new Date(new Date().getTime + data.expiresIn * 1000));\n\n            dispatch(authSuccess(data.idToken));\n            dispatch(autoLogout(data.expiresIn * 1000));\n\n        } catch (e) {\n            alert('Неверный логин или пароль');\n            console.log(e);\n        };\n    };\n};\n\nexport function authSuccess(token) {\n    return {\n        type: AUTH_SUCCESS,\n        token,\n    };\n};\n\nexport function autoLogout(time) {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout);\n        }, time);\n    };\n};\n\nexport function logout() {\n    return {\n        type: AUTH_LOGOUT,\n    };\n};\n\nexport function autoLogin() {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime())));\n            };\n        };\n    };\n};\n\n","import React from 'react';\nimport classes from './Auth.module.scss';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport auth from '../../redux/actions/auth';\n\nfunction validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nclass Auth extends React.Component {\n\n    state = {\n        isFormValid: false,\n        formControlls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Введите корректный email',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true,\n                },\n\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Пароль',\n                errorMessage: 'Введите корректный пароль',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6,\n                },\n            },\n        },\n    };\n\n    loginHenadler = () => {\n\n        this.props.auth(\n            this.state.formControlls.email.value,\n            this.state.formControlls.password.value,\n            true\n        );\n    };\n\n    registerHenadler = () => {\n        this.props.auth(\n            this.state.formControlls.email.value,\n            this.state.formControlls.password.value,\n            false\n        );\n    };\n\n    submitHandler = (event) => {\n        event.preventDefault();\n    };\n\n    validateControl = (value, validation) => {\n        if (!validation) {\n            return true;\n        };\n\n        let isValid = true;\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid;\n        };\n        if (validation.email) {\n            isValid = validateEmail(value);\n        };\n        if (validation.minLength) {\n            isValid = value.length >= 6 && isValid;\n        };\n\n        return isValid;\n    };\n\n    onChangeHandler = (event, controlName) => {\n        const formControlls = { ...this.state.formControlls };\n        const control = { ...formControlls[controlName] };\n\n        control.value = event.target.value;\n        control.touched = true;\n        control.valid = this.validateControl(control.value, control.validation);\n        formControlls[controlName] = control;\n\n        let isFormValid = true;\n        Object.keys(formControlls).forEach(controlName => {\n            isFormValid = formControlls[controlName].valid && isFormValid;\n        })\n\n        this.setState({\n            formControlls, isFormValid\n        });\n    };\n\n    renderInputs() {\n        return Object.keys(this.state.formControlls).map((controlName, index) => {\n            const control = this.state.formControlls[controlName];\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    label={control.label}\n                    errorMessage={control.errorMessage}\n                    valid={control.valid}\n                    shouldValidate={!!control.validation}\n                    touched={control.touched}\n                    onChange={event => this.onChangeHandler(event, controlName)}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes['Auth']}>\n                <div>\n                    <h1>Auth</h1>\n\n                    <form className={classes['AuthForm']} onSubmit={this.submitHandler}>\n\n                        {this.renderInputs()}\n\n                        <Button\n                            type='success'\n                            onClick={this.loginHenadler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Войти\n                        </Button>\n                        <Button\n                            type='primary'\n                            onClick={this.registerHenadler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Зарегистрироваться\n                        </Button>\n                    </form>\n\n                </div>\n            </div>\n        );\n    };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/actions/auth';\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        this.props.logout();\n    };\n\n    render() {\n        return <Redirect to='/' />\n    };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        logout: () => dispatch(logout()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from './hoc/Layout/Layout';\nimport Quiz from './containers/Quiz/Quiz';\nimport QuizList from './containers/QuizList/QuizList';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './components/Logout/Logout';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { autoLogin } from './redux/actions/auth';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.autoLogin();\n  };\n\n  render() {\n    let routes =\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/quiz/:id\" component={Quiz} />\n        <Route path=\"/\" exact component={QuizList} />\n      </Switch>\n\n    if (this.props.isAuthenticate) {\n      routes =\n        <Switch>\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\n          <Route path=\"/quiz/:id\" component={Quiz} />\n          <Route path=\"/\" exact component={QuizList} />\n          <Route path=\"/logout\" component={Logout} />\n          <Redirect to='/' />\n        </Switch>\n    };\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticate: !!state.auth.token,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZ_BY_ID_SUCCESS,\n    RETRY_HANDLER,\n    SET_ANSWER_STATE_AND_RESULTS,\n    SET_IS_FINISHED,\n    NEXT_QUESTION,\n    TO_QUIZ_BEGINING,\n} from '../actions/actionsTypes';\n\nconst initialState = {\n    quizes: [],\n    loading: true,\n    error: null,\n    activeQuestion: 0,\n    answerState: null,\n    isFinished: false,\n    results: {},\n    quiz: [],\n};\n\nconst quizReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_QUIZES_START:\n            return {\n                ...state,\n                loading: true,\n            };\n\n        case FETCH_QUIZES_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                quizes: action.quizes,\n            };\n\n        case FETCH_QUIZES_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n\n        case FETCH_QUIZ_BY_ID_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                quiz: action.quiz,\n            };\n\n        case RETRY_HANDLER:\n            return {\n                ...state,\n                activeQuestion: 0,\n                answerState: null,\n                isFinished: false,\n                results: {},\n            };\n\n        case SET_ANSWER_STATE_AND_RESULTS:\n            return {\n                ...state,\n                answerState: { [action.answerId]: action.value },\n                results: action.results,\n            };\n\n        case SET_IS_FINISHED:\n            return {\n                ...state,\n                isFinished: action.value,\n            };\n\n        case NEXT_QUESTION:\n            return {\n                ...state,\n                activeQuestion: action.value,\n                answerState: null\n            };\n\n        case TO_QUIZ_BEGINING:\n            return {\n                ...state,\n\n            };\n\n        default:\n            return state;\n    };\n};\n\nexport default quizReducer;\n","import { ADD_QUESTION, CHANGE_ANSWERS_COUNT } from \"../actions/actionsTypes\";\n\nconst initialState = {\n    quiz: [],\n};\n\nconst createReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_QUESTION:\n            return {\n                ...state,\n                quiz: [...state.quiz, action.item],\n            };\n\n        case CHANGE_ANSWERS_COUNT:\n            return {\n                ...state,\n                answersCount: action.count,\n            };\n\n        default:\n            return state;\n    };\n};\n\nexport default createReducer;","import { AUTH_SUCCESS, AUTH_LOGOUT } from '../actions/actionsTypes';\n\nconst initialState = {\n    token: null,\n};\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case AUTH_SUCCESS:\n            return {\n                ...state,\n                token: action.token,\n            };\n\n        case AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null,\n            };\n\n        default:\n            return state;\n    };\n};\n","import { combineReducers } from \"redux\";\nimport quizReducer from './quiz';\nimport createReducer from \"./create\";\nimport { authReducer } from \"./auth\";\n\nconst rootReducer = combineReducers({\n    quiz: quizReducer,\n    create: createReducer,\n    auth: authReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './redux/reducers/rootReducer';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nconst app = (\n  <Provider store={store} >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}